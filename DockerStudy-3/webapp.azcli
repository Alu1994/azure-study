# Login no Azure
az login

# Build da Imagem Localmente
rg=rg-containers
local=brazilsouth
acr=newacrmatscontainerapps

# Criar Grupo de Recursos
az group create -n $rg -l $local

# Checkar se nome esta em uso no ACR
az acr check-name -n $acr

# Criar Azure Container Registry
az acr create -n $acr -g $rg --sku Basic

# Mostrar endpoint
az acr show-endpoints -n $acr

# Habilite a conta de usuario administrador para o ACR
az acr update -n $acr --admin-enable true

# listar os ACRs
az acr list -o table

# Detalhes do ACR
az acr show -n $acr --output table

# Enviar Imagens ao Repositorio do ACR
# Variaveis
img=site-html

# Build do Dockerfile
docker build -t $img .

# login no ACR
az acr login --name $acr

# Tag para o ACR
docker tag $img $acr.azurecr.io/$img

# Push para o ACR
docker push $acr.azurecr.io/$img

# Criar App Service Plan e App Service for containers
appplan=plano-containers
appservice=newappservicecontainers

# Criar Plano de aplicativo com SKU S1
az appservice plan create -g $rg -n $appplan --sku F1 -l $local --is-linux

# Criar App Service for Containers
az webapp create -g $rg -p $appplan -n $appservice -i $acr.azurecr.io/$img

# Habilitar Continuous Deployment 
az webapp deployment container config --enable-cd true -n $appservice -g $rg

# Mostrar URL Continuous Deployment 
az webapp deployment container show-cd-url -n $appservice -g $rg

# Obter URL para ser usada para configurar webhooks para Continuous Deployment 
cicdurl=$(az webapp deployment container show-cd-url -n $appservice -g $rg --query CI_CD_URL --output tsv)

# Criar Webhook no ACR
webhook=webhookacrlatest

az acr webhook create -n $webhook -r $acr -g $rg --actions push --uri $cicdurl --scope $img

# Listar Eventos do Webhook
az acr webhook list-events -n $webhook -r $acr

# Ping no Webhook
az acr webhook ping -n $webhook -r $acr